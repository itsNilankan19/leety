You are given a 0-indexed integer array nums. You have to find the maximum sum of a pair of numbers from nums such that the maximum digit in both numbers are equal.
Return the maximum sum or -1 if no such pair exists.
 

Example 1:

Input: nums = [51,71,17,24,42]
Output: 88
Explanation: 
For i = 1 and j = 2, nums[i] and nums[j] have equal maximum digits with a pair sum of 71 + 17 = 88. 
For i = 3 and j = 4, nums[i] and nums[j] have equal maximum digits with a pair sum of 24 + 42 = 66.
It can be shown that there are no other pairs with equal maximum digits, so the answer is 88.


Example 2:

Input: nums = [1,2,3,4]
Output: -1
Explanation: No pair exists in nums with equal maximum digits.
 

Constraints:

2 <= nums.length <= 100
1 <= nums[i] <= 104






Soln :-

Java
class Solution {
    public int maxSum(int[] nums) {
        int ans=-1;
        for(int i=0;i<nums.length;i++)
        {
            int first=nums[i];
            int a[]=new int[10];
            while(first!=0)
            {
                a[first%10]++;
                first/=10;
            }
            for(int j=i+1;j<nums.length;j++)
            {
                
                int b[]=new int[10];
                int second=nums[j];
                while(second!=0)
                {
                    b[second%10]++;
                    second/=10;
                }
                int res=-1;
                for(int ind=9;ind>=0;ind--)
                {
                    if(a[ind]>0 && b[ind]>0)
                    {
                        res=ind;
                        break;
                    }
                    else if(a[ind]!=b[ind])
                    {
                        res=-1;
                        break;
                    }
                }
                if(res!=-1)
                {
                    ans=Math.max(ans,nums[i]+nums[j]);
                }
            }
        }
        return ans;
    }
}

C++
class Solution {
public:
    int maxSum(vector<int>& nums) {
        int sz = nums.size(), maxSum = INT_MIN;
        for(int indx = 0; indx<sz; indx++){
            for(int indx1 = indx+1; indx1 < sz; indx1++){
                int num1 = nums[indx], num2 = nums[indx1];
             
                if(maxEle(num1) == maxEle(num2)){
                    maxSum = max(maxSum, num1 + num2);
                }
            }
        }
        return maxSum == INT_MIN ? -1 : maxSum; 
    }
    int maxEle(int num){
        int maxEl = INT_MIN;
        while(num > 0){
            maxEl = max(maxEl, num % 10);
            num /=10;
        }
        return maxEl;
    }
};
